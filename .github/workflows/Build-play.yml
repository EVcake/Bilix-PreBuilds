name: Build Bilix-play

on:
  repository_dispatch:
    types: [Build-play]

jobs:
  Build-Bilix-play:
    name: Build Bilix-play
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest
    steps:

      # Get $publishTime
      - name: Get Current Time
        run: |
          TIME=$EPOCHSECONDS
          echo "TIME=$TIME" >> $GITHUB_ENV
          Day=$(date +"%-m.%-d")
          echo "Day=$Day" >> $GITHUB_ENV

      # Check repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Save env
      - name: Initialize variables
        run: |
          # Check custom
          echo "url-custom-play=`awk -F "=" '$1 == "url.custom.play" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          echo "url-custom-revanced-cli=`awk -F "=" '$1 == "url.custom.revanced.cli" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          # Get custom url
          echo "play-url=`awk -F "=" '$1 == "url.custom.bilibili.play" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          echo "cli-url=`awk -F "=" '$1 == "url.custom.revanced.cli.url" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          # Get version info
          echo "ver=`awk -F "=" '$1 == "BiliRoamingX.ver.full" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          echo "bigver=`awk -F "=" '$1 == "BiliRoamingX.ver.code" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          # Build need
          echo "Build-Bilix=`awk -F "=" '$1 == "Bilix.build.cn" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          echo "Build-Bilix-play=`awk -F "=" '$1 == "Bilix.build.play" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          echo "with-release=`awk -F "=" '$1 == "temp.with.release" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          echo "release=`awk -F "=" '$1 == "temp.release.play" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          # Changelog need
          echo "push-changelog=`awk -F "=" '$1 == "push.changelog" {print $2}' ./build/Build.prop`" >> $GITHUB_ENV
          echo "Nightly-Changelog<<EOF" >> $GITHUB_ENV
          cat ./build/Changelog_Nightly.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          cd ./
          git clone https://github.com/sti-233/Bilix-PreBuilds.git
          cd ./Bilix-PreBuilds
          commit-count=`git rev-list HEAD --count`
          echo "commit-count=$commit-count" >> $GITHUB_ENV
          hash=`git log -1 --format="%h"`
          echo "hash=$hash" >> $GITHUB_ENV
          rm ./Bilix-PreBuilds

      # Get revanced-cli
      - name: Get Revanced-cli
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          cd ./
          echo Downloading modified revanced-cli
          wget https://github.com/zjns/revanced-cli/releases/download/v4.6.0.1/revanced-cli.jar
          cp ./build/patches.jar ./patches.jar
          cp ./build/integrations.apk ./integrations.apk

      # Get original bilibili
      - name: Get original bilibili-play
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          if [ "${{ env.url-custom-play }}" = "false" ]; then
            aria2c --out "play.apk" https://d.apkpure.com/b/APK/com.bilibili.app.in?version=latest
          fi
          if [ "${{ env.url-custom-play }}" = "true" ]; then
            aria2c --out "play.apk" ${{ env.play-url }}
          fi

      # Check $version & $versionCode
      - name: "Get play Info"
        if: ${{ env.Build-Bilix-play == 'true' }}
        id: "apk-info-play"
        uses: "8Mi-Tech/get-apk-info-action@master"
        with:
          apkPath: "play.apk"
        #版本号：${{steps.apk-info.outputs.versionNum}}
        #版本代码：${{steps.apk-info.outputs.versionCode}}

      # Get play $patchVersion $patchVersionCode
      - name: Get Bilibili-play info
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          echo "Bilix-play-ver=${{steps.apk-info-play.outputs.versionNum}}" >> $GITHUB_ENV
          echo "Bilix-play-vercode=${{steps.apk-info-play.outputs.versionCode}}" >> $GITHUB_ENV

      # build part
      - name: Build Bilix-play
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          java -jar revanced-cli.jar patch --merge integrations.apk --patch-bundle patches.jar --signing-levels 1,2,3 play.apk

      # named Bilix-play
      - name: Rename Bilix-play
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          mv play-patched.apk Bilix-play-${{ env.Bilix-play-ver }}-${{ env.ver }}@Aniruf_x.apk

      # Signing Bilix-play
      - name: Resign Bilix-play
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          cd ./
          echo Downloading uber-apk-signer
          wget https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar
          java -jar uber-apk-signer-1.3.0.jar -a Bilix-play-${{ env.Bilix-play-ver }}-${{ env.ver }}@Aniruf_x.apk --overwrite --allowResign --ks BiliRoamingX.p12 --ksAlias ${{ secrets.signalias }} --ksKeyPass ${{ secrets.signkey }} --ksPass ${{ secrets.signkey }}

      # Get $sn
      - name: Get sn from Bilix-play
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          sudo apt-get install aapt
          aapt dump xmltree ./Bilix-play-${{ env.Bilix-play-ver }}-${{ env.ver }}@Aniruf_x.apk AndroidManifest.xml > AndroidManifest_output_play.txt
          echo "play-sn=$(grep "BUILD_SN" ./AndroidManifest_output_play.txt -A 1 | grep "android:value" | cut -d'=' -f2 | cut -d')' -f2 | awk '{printf "%d\n", strtonum($1)}')" >> $GITHUB_ENV

      # Get $md5
      - name: Get md5 from Bilix-play
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          echo "play-md5=$(md5sum ./Bilix-play-${{ env.Bilix-play-ver }}-${{ env.ver }}@Aniruf_x.apk | cut -d ' ' -f 1)" >> $GITHUB_ENV

      # Get $size
      - name: Get size from Bilix-play
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          echo "play-size=$(stat -c %s ./Bilix-play-${{ env.Bilix-play-ver }}-${{ env.ver }}@Aniruf_x.apk)" >> $GITHUB_ENV

      # Release part
      - name: Release Bilix-play
        if: ${{ env.Build-Bilix-play == 'true' && (env.with-release == 'true' || env.release == 'true') }}
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          fail_on_unmatched_files: true
          name: 'Bilix-play ${{ env.Bilix-play-ver }}(${{ env.Bilix-play-vercode }}) with BiliroamingX ${{ env.ver }}'
          tag_name: 'android_i-v${{ env.Bilix-play-ver }}-b${{ env.play-sn }}-p${{ env.ver }}'
          body: |
            版本信息：${{ env.Bilix-play-ver }} ${{ env.Bilix-play-vercode }} ${{ env.ver }} ${{ env.bigver }} ${{ env.play-sn }} ${{ env.play-size }} ${{ env.play-md5 }} ${{ env.TIME }}
             > 合并主分支
             > Bump bili ver to ${{ env.Bilix-play-vercode }}
            
            ${{ env.Nightly-Changelog }}
          files: ./Bilix-play-${{ env.Bilix-play-ver }}-${{ env.ver }}@Aniruf_x.apk
        continue-on-error: true

      - name: Release Again
        run: |
          curl --request PATCH \
          --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Content-type: application/json' \
          --header 'User-Agent: Github-Action' \
          --url https://api.github.com/repos/sti-233/Bilix-Prebuilds/releases/android_i-v${{ env.Bilix-play-ver }}-b${{ env.play-sn }}-p${{ env.ver }} \
          --data '{ "draft": false }'

      # Del Release Nightly ver
      - name: Delete old Nightly Bilix-play
        if: ${{ env.Build-Bilix-play == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        run: |
          gh release view "Nightly-android_i-Nightly" && gh release delete "Nightly-android_i-Nightly" -y --cleanup-tag
        continue-on-error: true
      
     # named Bilix-play-Nightly
      - name: Rename Bilix-play-Nightly
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          mv Bilix-play-${{ env.Bilix-play-ver }}-${{ env.ver }}@Aniruf_x.apk Bilix-play-Nightly@Aniruf_x.apk

      # Release Nightly
      - name: Release Bilix-play-Nightly
        if: ${{ env.Build-Bilix-play == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          fail_on_unmatched_files: false
          name: 'Bilix-play Nightly - BiliRoamingX ${{ env.ver }}'
          tag_name: 'Nightly-android_i-Nightly'
          body: |
            版本信息：${{ env.Bilix-play-ver }} ${{ env.Bilix-play-vercode }} ${{ env.ver }} ${{ env.bigver }} ${{ env.play-sn }} ${{ env.play-size }} ${{ env.play-md5 }} ${{ env.TIME }}
            
            ![Nightly.jpg](https://github.com/sti-233/Bilix-PreBuilds/blob/main/Nightly.jpg)
            > 合并主分支
            > Bump bili-play ver to ${{ env.Bilix-play-vercode }}
            
            ${{ env.Nightly-Changelog }}
          files: |
            ./Bilix-play-Nightly@Aniruf_x.apk
        continue-on-error: true

      - name: Release Nightly Again
        run: |
          curl --request PATCH \
          --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Content-type: application/json' \
          --header 'User-Agent: Github-Action' \
          --url https://api.github.com/repos/sti-233/Bilix-Prebuilds/releases/Nightly-android_i-Nightly \
          --data '{ "draft": false }'

      # output Bilix-play informations
      - name: Build Bilix-play Success
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          echo "### Build Bilix-play Success" >> $GITHUB_STEP_SUMMARY
          echo "版本信息：${{ env.Bilix-play-ver }} ${{ env.Bilix-play-vercode }} ${{ env.ver }} ${{ env.bigver }} ${{ env.play-sn }} ${{ env.play-size }} ${{ env.play-md5 }} ${{ env.TIME }}" >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo " > 合并主分支" >> $GITHUB_STEP_SUMMARY
          echo " > Bump bili ver to ${{ env.Bilix-play-vercode }}" >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo "$(cat ./build/Changelog_Nightly.txt)" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      # output Nightly ver info
      - name: Build Bilix-play-Nightly Success
        if: ${{ env.Build-Bilix-play == 'true' }}
        run: |
          echo "### Build Bilix-play-Nightly Success" >> $GITHUB_STEP_SUMMARY
          echo "版本信息：${{ env.Bilix-play-ver }} ${{ env.Bilix-play-vercode }} ${{ env.ver }} ${{ env.bigver }} ${{ env.play-sn }} ${{ env.play-size }} ${{ env.play-md5 }} ${{ env.TIME }}" >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo " > 合并主分支" >> $GITHUB_STEP_SUMMARY
          echo " > Bump bili-play ver to ${{ env.Bilix-play-vercode }}" >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo "$(cat ./build/Changelog_Nightly.txt)" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Upload Build Resource
        if: ${{ env.Build-Bilix == 'false' && env.Build-Bilix-play == 'true' }}
        run: |
          cd ./
          rm ./Build.prop
          cp ./build/Build.prop ./Build.prop
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add Build.prop
          git commit -m "Push prop"
          git push
        continue-on-error: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9.x'

      - name: Prepare
        run : |
          mv ./Bilix-play-Nightly@Aniruf_x.apk ./Bilix-play-Nightly-n.${{ env.commit-count }}.${{ env.hash }}@Aniruf_x.apk
          echo "Nightly_apk=./Bilix-play-Nightly-n.${{ env.commit-count }}.${{ env.hash }}@Aniruf_x.apk" >> $GITHUB_ENV
          pip install pyrogram tgcrypto

      - name: Post to Channel
        shell: python
        env:
          API_ID: ${{ secrets.TELEGRAM_API_ID }}
          API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          chat_id: ${{ secrets.CHANNEL_ID }}
          session: ${{ secrets.TELEGRAM_SESSION }}
        run: |
          import asyncio
          import inspect
          import os
          from pyrogram import Client
          from pyrogram.types import InputMediaDocument
          async def main():
            session = os.environ["session"]
            bot = Client(
              "client",
              session_string=session,
            )
            async with bot:
              Day = os.environ["Day"]
              RoamingXver = os.environ["ver"]
              ver = os.environ["Bilix-play-ver"]
              ver_code = os.environ["Bilix-play-vercode"]
              chat_id = os.environ["chat_id"]
              changelog = os.environ["Nightly-Changelog"]
              msg_p1 = f"Bilix Nightly - {Day}"
              msg_p2 = f"BiliRoamingX {RoamingXver}"
              msg_p3 = f"<pre>play {ver} {ver_code}</pre>"
              msg_p4 = "New release to GitHub!<pre>"
              msg_p5 = inspect.cleandoc("""
              > 合并 sti-233/BiliRoamingX
               *现在具有切换更新源的能力\n
              """)
              msg_p6 = f"{changelog}</pre>"
              msg_p7 = inspect.cleandoc("""
              by sti-233
              在Github查看详情
              
              *此为非官方构建
              Patched by @Aniruf_x
              #Biliroaming_X
              """)
              caption = "{}\n\n{}\n{}\n\n{}\n{}\n{}{}".format(msg_p1, msg_p2, msg_p3, msg_p4, msg_p5, msg_p6, msg_p7)
              Nightly = InputMediaDocument(media=os.environ["Nightly_apk"], caption=caption)
              # 发送到指定的频道
              await bot.send_media_group(
                chat_id=chat_id,
                media=[Nightly],
              )
          async def wait():
            try:
              await asyncio.wait_for(main(), timeout=600)
            except asyncio.TimeoutError:
              print("message send timeout!!!")
              exit(1)
          asyncio.run(wait())

      # Success
      - name: End
        run: echo "Build end."